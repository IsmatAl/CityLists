plugins {
	id 'java'
	id 'org.springframework.boot' version "${spring_boot_version}"
	id 'io.spring.dependency-management' version "${spring_dependency_version}"
	id 'com.diffplug.spotless' version "${spotless_version}"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.springdoc:springdoc-openapi-ui:${openapi_version}"
	implementation 'com.opencsv:opencsv:5.7.1'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "org.liquibase:liquibase-core:${liquibase_version}"
	implementation "io.micrometer:micrometer-registry-prometheus"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'
		targetExclude 'bin/', 'out/'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		eclipse()
		removeUnusedImports()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
